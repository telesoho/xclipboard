# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  testwsl:
    name: "test wsl"
    runs-on: windows-latest
    outputs:
      powershell_path: ${{ steps.powershell_path.outputs.value }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: powershell_path
        run: echo "value=""('where /f powershell')""" >> "$GITHUB_OUTPUT"
      - id: pwsh_path
        run: echo "value=""('where /f pwsh')""" >> "$GITHUB_OUTPUT"
      - name: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v3
      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: Vampire/setup-wsl@v2
        with:
          distribution: Ubuntu-20.04
#           additional-packages:
#             dos2unix
#             xclip
      - shell: wsl-bash {0}
        run: whereis powershell
      - shell: wsl-bash {0}
        run: wslpath -m $PWD
      - shell: wsl-bash {0}
        run: pwd        
      - shell: wsl-bash {0}
        run: /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -executionpolicy bypass -file set-clipboard-png.ps1 ./telesoho_logo_80x80.png
#       - id: output_png
#         run: |
#           echo "output_png=$(wslpath -m $PWD/test.png)\n" >> "$GITHUB_OUTPUT"
      - shell: wsl-bash {0}
        run: /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -executionpolicy bypass -file save-clipboard-png.ps1 "D:/a/xclipboard/xclipboard/test.png"
      - shell: wsl-bash_Ubuntu-20.04 {0}
        run: |
            npm install
            node index.cjs

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]
